spring:
  #spring数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://127.0.0.1:3306/time?serverTimezone=GMT
    driverClassName: com.mysql.jdbc.Driver
    username: root
    password: 123456
    #dataSource Pool configuration
    # 下面为连接池的补充设置，应用到上面所有数据源中
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    exceptionSorter: true
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,log4j
    logSlowSql: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties:
      druid:
        stat:
          mergeSql: true
          slowSqlMillis: 5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

#mybatis配置
mybatis:
  #把xml文件放在com.XX.mapper.*中可能会出现找到的问题，这里把他放在resource下的mapper中
  mapper-locations: classpath:mapper/*/**Mapper.xml
  configuration:
    #控制台sql日志输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #mybatis返回类型省略全路径包名
  type-aliases-package: com.time.article.dao.entity.business

#用户认证
shiro:
  #服务器本地地址
  serviceUrl: http://localhost:${server.port}${server.context-path}
  #cas客户端回调地址
  callbackUrl: http://localhost:${server.port}${server.context-path}/callback
  #cas服务前缀
  prefixUrl: https://sso.cas.com:8443/cas
  #服务器登陆地址
  loginUrl: https://sso.cas.com:8443/cas/login
  #服务器登出地址
  logoutUrl: https://sso.cas.com:8443/cas/logout
  #cas客户端名称
  clientName: restClient
  #jwt salt
  salt:
    asdfwerzc242!@#$$sdfgsdf34534454d

#服务器配置
server:
  context-path:
  port: 8999
  tomcat:
  #tomcat字符集
    uri-encoding: UTF-8